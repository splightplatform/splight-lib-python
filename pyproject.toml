[tool.poetry]
name = "splight-lib"
version = "5.11.14"
description = "Splight Library"
authors = ["Splight Dev <dev@splight-ae.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<4.0.0"
concurrent-log-handler = "0.9.21"
cryptography = "42.0.4"
furl = "2.1.3"
geojson-pydantic = "1.0.1"
hexbytes = "0.2.2"
httpx = "0.23.3"
jinja2 = "3.1.4"
mergedeep = "1.3.4"
pandas = "1.5.2"
parameterized = "0.8.1"
pathspec = "0.11.1"
protobuf = "4.21.6"
py7zr = "0.20.8"
pydantic = "2.4.2"
pytz = "2021.3"
pyyaml = "6.0.1"
requests = ">=2.26.0"
retry = "0.9.2"
simplejson = "3.17.6"
strenum = "0.4.9"
typing-extensions = "^4.6.1"
pydantic-settings = "2.0.3"
email-validator = "^2.1.0.post1"
apscheduler = "3.10.4"
typer = "0.9.0"
progressbar2 = "4.4.1"
numpy = "1.26.4"

[tool.poetry.group.dev.dependencies]
black = "24.3.0"
isort = "5.12.0"
ipdb = "^0.13.13"
ipython = "8.12.2"
flake8 = "^6.1.0"
pre-commit = "3.2.2"
pytest = "^7.4.3"
jsonref = "1.1.0"
polyfactory = "2.13.0"
openapi-schema-validator = "0.6.2"
pytest-mock = "^3.12.0"
ruff = "^0.3.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::RuntimeWarning",
    "ignore::UserWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::pytest.PytestUnhandledThreadExceptionWarning",
    "ignore::pytest.PytestAssertRewriteWarning",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 79
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
