# used when a new feature has already been merged to master
# this step creates a new tag in the github repository, pushes the release
# version to pypi and deletes all dev versions
name: "Release"
on:
  push:
    branches:
      - "master"

env:
  LIBRARY_NAME: "splight-lib"

jobs:
  tag_version:
    runs-on: ubuntu-latest
    name: Create tag version on github repository
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Get version from feature branch
        run: echo "CURRENT_VERSION=$(grep -E 'version' setup.py | awk -F'"' '{ print $2 }')" >> "$GITHUB_ENV"

      - name: Create tag
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.CURRENT_VERSION }}
          tag_name: ${{ env.CURRENT_VERSION }}

  upload_release_to_pypi:
    runs-on: ubuntu-latest
    name: Upload release library version to pypi
    needs: [tag_version]
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  cleanup_pypi:
    runs-on: ubuntu-latest
    name: Remove all developer versions from pypi
    needs: [upload_release_to_pypi]
    steps:
      - name: Checkout to feature branch
        uses: actions/checkout@v3

      # install requests and pypi-cleanup
      - name: Install requirements
        run: pip install -r .github/workflows/scripts/requirements.txt

      - name: Get version from feature branch
        run: echo "CURRENT_VERSION=$(grep -E 'version' setup.py | awk -F'"' '{ print $2 }')" >> "$GITHUB_ENV"

      - name: Remove all developer versions from pypi
        run: python .github/workflows/scripts/cleanup_pypi.py $LIBRARY_NAME ${{ env.CURRENT_VERSION }} ${{ secrets.PYPI_USERNAME }} ${{ secrets.PYPI_PASSWORD}}
