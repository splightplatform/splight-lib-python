# Generated by Django 3.2.8 on 2022-02-22 13:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Connector',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('host', models.CharField(max_length=60)),
                ('port', models.IntegerField()),
                ('protocol', models.CharField(choices=[('dnp3', 'DNP3'), ('iec6', 'IEC61850')], max_length=4)),
                ('extra_properties', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalOffer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DigitalOfferComponent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Namespace',
            fields=[
                ('id', models.CharField(default='default', max_length=255, primary_key=True, serialize=False)),
                ('environment', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ServerConnector',
            fields=[
                ('connector_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djatabase.connector')),
                ('external_port', models.IntegerField()),
            ],
            bases=('djatabase.connector',),
        ),
        migrations.CreateModel(
            name='TriggerGroup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('priority', models.CharField(choices=[('high', 'High priority'), ('standard', 'Standard priority')], default='high', max_length=8)),
                ('notification_message', models.TextField()),
                ('condition', models.CharField(choices=[('gt', 'Greater'), ('lt', 'Lower'), ('lte', 'Lower or equal'), ('gte', 'Greater or equal'), ('eq', 'Equal'), ('ne', 'Not equal')], default='gte', max_length=3)),
                ('value', models.FloatField()),
                ('renotify', models.BooleanField()),
                ('renotify_unit', models.CharField(choices=[('minutes', 'Minutes'), ('hours', 'Hours'), ('days', 'Days'), ('weeks', 'Weeks')], default='minutes', max_length=7, null=True)),
                ('renotify_time', models.IntegerField(null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_triggers', to='djatabase.asset')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_triggers', to='djatabase.attribute')),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
                ('trigger_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggers', to='djatabase.triggergroup')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('value', models.CharField(blank=True, max_length=100)),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RunningDigitalOffer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('digital_offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='running', to='djatabase.digitaloffer')),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digital_offers', to='djatabase.tag')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=10, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.CharField(blank=True, max_length=100, null=True)),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mapping',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Geopoint',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('namespace', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.AddField(
            model_name='digitaloffer',
            name='components',
            field=models.ManyToManyField(related_name='digital_offers', to='djatabase.DigitalOfferComponent'),
        ),
        migrations.AddField(
            model_name='connector',
            name='namespace',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='namespace',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace'),
        ),
        migrations.AddField(
            model_name='asset',
            name='geopoints',
            field=models.ManyToManyField(blank=True, to='djatabase.Geopoint'),
        ),
        migrations.AddField(
            model_name='asset',
            name='namespace',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='djatabase.namespace'),
        ),
        migrations.AddField(
            model_name='asset',
            name='tags',
            field=models.ManyToManyField(blank=True, to='djatabase.Tag'),
        ),
        migrations.CreateModel(
            name='ServerMapping',
            fields=[
                ('mapping_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djatabase.mapping')),
                ('path', models.CharField(max_length=300, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_mappings', to='djatabase.asset')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_mappings', to='djatabase.attribute')),
                ('connector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='djatabase.serverconnector')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
            bases=('djatabase.mapping',),
        ),
        migrations.AddField(
            model_name='serverconnector',
            name='network',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_connectors', to='djatabase.network'),
        ),
        migrations.CreateModel(
            name='ClientConnector',
            fields=[
                ('connector_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djatabase.connector')),
                ('network', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_connectors', to='djatabase.network')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
            bases=('djatabase.connector',),
        ),
        migrations.CreateModel(
            name='ValueMapping',
            fields=[
                ('mapping_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djatabase.mapping')),
                ('value', models.CharField(max_length=40)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_mappings', to='djatabase.asset')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_mappings', to='djatabase.attribute')),
            ],
            options={
                'unique_together': {('attribute', 'asset')},
            },
            bases=('djatabase.mapping',),
        ),
        migrations.AlterUniqueTogether(
            name='serverconnector',
            unique_together={('network', 'external_port')},
        ),
        migrations.CreateModel(
            name='ReferenceMapping',
            fields=[
                ('mapping_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djatabase.mapping')),
                ('value', models.CharField(max_length=40)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_mappings', to='djatabase.asset')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_mappings', to='djatabase.attribute')),
                ('ref_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='djatabase.asset')),
                ('ref_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='djatabase.attribute')),
            ],
            options={
                'unique_together': {('attribute', 'asset')},
            },
            bases=('djatabase.mapping',),
        ),
        migrations.CreateModel(
            name='ClientMapping',
            fields=[
                ('mapping_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djatabase.mapping')),
                ('path', models.CharField(max_length=300, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_mappings', to='djatabase.asset')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_mappings', to='djatabase.attribute')),
                ('connector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='djatabase.clientconnector')),
            ],
            options={
                'unique_together': {('attribute', 'asset')},
            },
            bases=('djatabase.mapping',),
        ),
    ]
